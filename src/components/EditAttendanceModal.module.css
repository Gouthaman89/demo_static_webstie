/* src/components/EditAttendanceModal.module.css */

/* 
  Define variables on a local class instead of :root.
  This class will be applied to the modal's top-level div,
  making the variables available to all child elements.
*/
.modalOverlay {
  --primary-color: #007bff;
  --primary-hover-color: #0056b3;
  --secondary-color: #6c757d;
  --secondary-hover-color: #5a6268;
  --light-gray-color: #f8f9fa;
  --border-color: #dee2e6;
  --text-color: #212529;
  --error-color: #dc3545;
  --error-background-color: #fdeded; /* A slightly softer red background */
  --modal-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);

  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1050;
  animation: fadeIn 0.3s ease-out;
}

.modalContent {
  background-color: #fff;
  border-radius: 8px;
  box-shadow: var(--modal-shadow);
  width: 90%;
  max-width: 800px;
  height: 90vh;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  animation: slideIn 0.3s ease-out;
  position: relative;
}

.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 16px 24px;
  border-bottom: 1px solid var(--border-color);
}

.modalTitle {
  margin: 0;
  font-size: 1.25rem;
  color: var(--text-color);
}

.closeButton {
  background: transparent;
  border: none;
  font-size: 1.5rem;
  line-height: 1;
  cursor: pointer;
  padding: 0;
  color: var(--secondary-color);
  opacity: 0.7;
}

.closeButton:hover {
  opacity: 1;
}

.modalBody {
  padding: 24px;
  display: flex;
  flex-direction: column;
  gap: 16px;
  padding-bottom: 80px;
}

.row {
  display: flex;
  gap: 16px;
  flex-wrap: wrap;
}

.formGroup {
  flex: 1 1 45%;
  display: flex;
  flex-direction: column;
}

.label {
  margin-bottom: 8px;
  font-weight: 500;
  color: var(--text-color);
}

.input {
  width: 100%;
  padding: 10px 12px;
  font-size: 1rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  transition: border-color 0.2s, box-shadow 0.2s, background-color 0.2s;
  box-sizing: border-box;
}

.input:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.25);
}

.input[readOnly] {
  background-color: var(--light-gray-color);
  cursor: not-allowed;
}

/* This rule is now more specific and correctly overrides the base .input style */
.input.errorInput {
  border-color: var(--error-color);
  background-color: var(--error-background-color);
}

.input.errorInput:focus {
  border-color: var(--error-color);
  box-shadow: 0 0 0 3px rgba(220, 53, 69, 0.25);
}

.errorMessage {
  color: var(--error-color);
  text-align: center;
  margin-top: -8px;
  margin-bottom: 8px;
}

.modalActions {
  position: sticky;
  bottom: 0;
  width: 100%;
  display: flex;
  justify-content: flex-end;
  gap: 12px;
  padding: 12px 24px;
  border-top: 1px solid var(--border-color);
  background-color: var(--light-gray-color);
  border-bottom-left-radius: 8px;
  border-bottom-right-radius: 8px;
}

.button {
  padding: 10px 20px;
  font-size: 1rem;
  font-weight: 500;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  color: white;
  background-color: var(--secondary-color);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  transition: background-color 0.2s, transform 0.1s;
}

.button:active {
    transform: translateY(1px);
}

.button:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.primaryButton {
  background-color: var(--primary-color);
}

.primaryButton:hover:not(:disabled) {
  background-color: var(--primary-hover-color);
}

.secondaryButton {
  background-color: var(--secondary-color);
  color: white;
}

.secondaryButton:hover:not(:disabled) {
  background-color: var(--secondary-hover-color);
}

.mapImageContainer {
  margin-top: 1rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  padding: 10px;
  background-color: #fafafa;
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  width: 300px;
  height: 200px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  position: relative;
}

.mapPreview {
  max-width: 100%;
  height: auto;
  cursor: pointer;
  border-radius: 4px;
}

.fullscreenImageOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

.fullscreenImage {
  max-width: 90vw;
  max-height: 90vh;
  border-radius: 8px;
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
}
/* Animations */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideIn {
  from { transform: translateY(-30px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}